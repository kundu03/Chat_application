{"ast":null,"code":"var _jsxFileName = \"/Users/sagar/Desktop/Development/chatapp/Chat_application/src/appcomponents/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Img from \"../components/Images/img.png\";\nimport Attach from \"../components/Images/attach.png\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { ChatContext } from \"../Context/ChatContext\";\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../Firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const [imgURL, setImgUrl] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  useEffect(() => {\n    if (img) {\n      setImgUrl(URL.createObjectURL(img));\n      return () => URL.revokeObjectURL(url);\n    } else {\n      setImgUrl(null);\n    }\n  }, [img]);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {}, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatID), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatID), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatID + \".lastMessage\"]: {\n        text\n      },\n      [data.chatID + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatID + \".lastMessage\"]: {\n        text\n      },\n      [data.chatID + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), img != null && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"chatImg\",\n      src: imgURL,\n      alt: img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Input, \"wlNGGaJy7k5uJBkxD19Eti3463M=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","Img","Attach","AuthContext","ChatContext","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","v4","uuid","getDownloadURL","ref","uploadBytesResumable","Input","text","setText","img","setImg","imgURL","setImgUrl","currentUser","data","useEffect","URL","createObjectURL","revokeObjectURL","url","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatID","messages","id","senderId","uid","date","now","user","e","target","value","display","files"],"sources":["/Users/sagar/Desktop/Development/chatapp/Chat_application/src/appcomponents/Input.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Img from \"../components/Images/img.png\";\r\nimport Attach from \"../components/Images/attach.png\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { ChatContext } from \"../Context/ChatContext\";\r\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../Firebase\";\r\nimport { v4 as uuid} from \"uuid\";\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nconst Input = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [img, setImg] = useState(null);\r\n    const [imgURL, setImgUrl] = useState(null);\r\n    const {currentUser} = useContext(AuthContext);\r\n    const {data} = useContext(ChatContext);\r\n    useEffect(() => {\r\n        if(img) {\r\n            setImgUrl(URL.createObjectURL(img));\r\n            return () => URL.revokeObjectURL(url);\r\n        } else {\r\n            setImgUrl(null);\r\n        }\r\n      }, [img]);\r\n    const handleSend = async () => {\r\n        if(img)\r\n        {\r\n            const storageRef = ref(storage, uuid());\r\n            const uploadTask = uploadBytesResumable(storageRef, img);\r\n            uploadTask.on(\r\n                (error) => {\r\n\r\n                },\r\n                () => {\r\n                getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n                    await updateDoc(doc(db, \"chats\", data.chatID), {\r\n                        messages: arrayUnion({\r\n                            id: uuid(),\r\n                            text,\r\n                            senderId: currentUser.uid,\r\n                            date: Timestamp.now(),\r\n                            img: downloadURL,\r\n                        }),\r\n                    });\r\n                });\r\n              });\r\n        }\r\n        else\r\n        {\r\n            await updateDoc(doc(db,\"chats\",data.chatID), {\r\n                messages: arrayUnion({\r\n                    id: uuid(),\r\n                    text,\r\n                    senderId: currentUser.uid,\r\n                    date: Timestamp.now(),\r\n                })\r\n            });\r\n        }\r\n        await updateDoc(doc(db, \"userChats\", currentUser.uid),{\r\n            [data.chatID + \".lastMessage\"]: {\r\n                text,\r\n            },\r\n            [data.chatID + \".date\"]: serverTimestamp(),\r\n        })\r\n        await updateDoc(doc(db, \"userChats\", data.user.uid),{\r\n            [data.chatID + \".lastMessage\"]: {\r\n                text,\r\n            },\r\n            [data.chatID + \".date\"]: serverTimestamp(),\r\n        })\r\n        setText(\"\");\r\n        setImg(null);\r\n    }\r\n    return <div className = \"input\">\r\n        <input type = \"text\" placeholder = \"Type something...\" onChange = {(e) => setText(e.target.value)} value = {text} />\r\n        <div className = \"send\">\r\n            <img src = {Attach} alt = \"/\" />\r\n            <input type = \"file\" style = {{display: \"none\"}} id = \"file\" onChange={(e) => setImg(e.target.files[0])} />\r\n            <label htmlFor = \"file\">\r\n                <img src = {Img} alt = \"/\" />\r\n            </label>\r\n            <button onClick = {handleSend}>Send</button>\r\n        </div>\r\n        {img != null && (<img className=\"chatImg\" src={imgURL} alt={img} />)}\r\n    </div>\r\n}\r\n\r\nexport default Input;"],"mappings":"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"},"metadata":{},"sourceType":"module"}