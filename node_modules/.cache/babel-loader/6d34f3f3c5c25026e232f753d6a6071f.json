{"ast":null,"code":"var _jsxFileName = \"/Users/sagar/Desktop/Development/chatapp/Chat_application/src/Context/ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatID: \"null\",\n    user: {}\n  };\n\n  const chatreducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatID: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatreducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatContextProvider, \"oxNZJ0VeS14VTXMH/cW6nlJfor8=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatID","user","chatreducer","state","action","type","payload","uid","dispatch","data"],"sources":["/Users/sagar/Desktop/Development/chatapp/Chat_application/src/Context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({children}) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    const INITIAL_STATE = {\r\n        chatID: \"null\",\r\n        user: {},\r\n    };\r\n    const chatreducer = (state,action) => {\r\n        switch(action.type)\r\n        {\r\n            case \"CHANGE_USER\" : return {\r\n                user: action.payload,\r\n                chatID: (currentUser.uid > action.payload.uid) ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid,\r\n            };\r\n            default : return state;\r\n        }\r\n    } \r\n    const [state,dispatch] = useReducer(chatreducer,INITIAL_STATE);\r\n    return (\r\n    <ChatContext.Provider value = {{data: state , dispatch}}>\r\n        {children}\r\n    </ChatContext.Provider>\r\n    );\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC/C,MAAM;IAACC;EAAD,IAAgBN,UAAU,CAACE,WAAD,CAAhC;EACA,MAAMK,aAAa,GAAG;IAClBC,MAAM,EAAE,MADU;IAElBC,IAAI,EAAE;EAFY,CAAtB;;EAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;IAClC,QAAOA,MAAM,CAACC,IAAd;MAEI,KAAK,aAAL;QAAqB,OAAO;UACxBJ,IAAI,EAAEG,MAAM,CAACE,OADW;UAExBN,MAAM,EAAGF,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAlC,GAAyCT,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAA1E,GAAgFH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqBT,WAAW,CAACS;QAFjG,CAAP;;MAIrB;QAAU,OAAOJ,KAAP;IANd;EAQH,CATD;;EAUA,MAAM,CAACA,KAAD,EAAOK,QAAP,IAAmBf,UAAU,CAACS,WAAD,EAAaH,aAAb,CAAnC;EACA,oBACA,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAI;MAACU,IAAI,EAAEN,KAAP;MAAeK;IAAf,CAA/B;IAAA,UACKX;EADL;IAAA;IAAA;IAAA;EAAA,QADA;AAKH,CAtBM;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}